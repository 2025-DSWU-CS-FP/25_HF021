server:
  port: 8080

spring:
  config:
    activate:
      on-profile: dev

  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - gender
              - birthyear
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile # name
              - https://www.googleapis.com/auth/user.gender.read
              - https://www.googleapis.com/auth/user.birthday.read

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    url: ${RDS_URL}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true

  data:
    redis:
      host: redis-cache
      port: 6379

logging:
  level:
    '[org.springframework.boot.web]': INFO

eyedia:
  tts:
    storageBaseDir: ./data/cdn        # mp3 저장 폴더 (실서버는 /var/eyedia/cdn)
    cdnBaseUrl: http://localhost:8080 # 정적 서빙되는 URL prefix
    openaiApiKey: ${OPENAI_API_KEY}   # 환경변수나 secrets에서 불러오기
    defaultVoice: alloy               # OpenAI 기본 보이스

app:
  oauth:
    success-redirect: https://eyedia.netlify.app/